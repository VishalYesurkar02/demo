machine1
echo (ip of M2)  m2| sudo tee -a /etc/hosts


vi /opt/servers
cd /opt
ls
for SERVER in $(cat /opt/servers)
do
ssh ${SERVER} hostname
ssh ${SERVER} uptime
done


ssh root@Server01 uptime;hostname

after adding in aws icmp port of m2 private ip

ping -a m2

 --------------------Script Testing-------------------------------
 
   ./run-everywhere.sh -n hostname
  ./run-everywhere.sh -v uptime
  ./run-everywhere.sh -ns id
  ./run-everywhere.sh -sv id
  ./run-everywhere.sh -f test hostname
  ./run-everywhere.sh -f /path/to/nowhere hostname
  ./run-everywhere.sh -s useradd test1
  ./run-everywhere.sh id test1
  echo "'Test two'"
  echo '"Test two"'
  ./run-everywhere.sh -ns 'useradd -c "Test two" test2'
  ./run-everywhere.sh -s 'useradd -c "Test two" test2'
  ./run-everywhere.sh id test2
  ./run-everywhere.sh -v id test2
  ./run-everywhere.sh -v tail -2 /etc/passwd
  ./run-everywhere.sh i-like-pizza
  echo $?
 
---------------- ApacheInstall-----------------------------------

#!/bin/bash

# This script installs the apache web server on the given host.
# This script assumes the user running it has sudo privs on the remote host.

usage() {
  # Display the usage and exit.
  echo "Usage: ${0} HOST [HOSTN...]" >&2
  exit 1
}

# Make sure the script is not being executed with superuser privileges.
if [[ "${UID}" -eq 0 ]]
then
  echo 'Do not execute this script as root.' >&2
  usage
fi

# If the user doesn't supply at least one argument, give them help.
if [[ "${#}" -lt 1 ]]
then
  usage
fi

# Expect the best, prepare for the worst.
EXIT_STATUS='0'

# Loop through the provided servers.
for SERVER in "${@}"
do
  echo "Starting installation process on: ${SERVER}"

  # Ping the server to make sure it's up.
  ping -c 1 ${SERVER} &> /dev/null

  if [[ "${?}" -ne 0 ]]
  then
    echo "${SERVER} down."
    EXIT_STATUS='1'
    continue
  fi

  # Install the httpd package
  ssh ${SERVER} sudo yum install -y httpd

  # Create an index.html file.
  ssh ${SERVER} 'echo "${HOSTNAME}" | sudo tee /var/www/html/index.html >/dev/null'

  # Start httpd
  ssh ${SERVER} sudo systemctl start httpd

  # Enable httpd
  ssh ${SERVER} sudo systemctl enable httpd

  # Test that the web server is accessible.
  curl http://${SERVER}

  if [[ "${?}" -ne 0 ]]
  then
    echo "Could not access the web server on ${SERVER}." >&2
    EXIT_STATUS='1'
    continue
  fi

  echo "Finished installation process on: ${SERVER}"
done

exit ${EXIT_STATUS}





curl -o /dev/null -s -w "%{http_code}\n" http://localhost
-------------------------------------------------------------------- 
 
#!/bin/bash

# This script displays the PIDs and count of matching processes.

PROC_NAME="${1}"
PIDS=$(pidof ${PROC_NAME})
COUNT=$(echo $PIDS | wc -w)

if [[ "${COUNT}" -gt 0 ]]
then
  echo "PROCESS NAME: ${PROC_NAME}"
  echo "COUNT: ${COUNT}"
  echo "PID(S): ${PIDS}"
else
  echo "No processes named ${PROC_NAME} found." >&2
  exit 1
fi
 
 
 
 
 
 